---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.redis.name }}
spec:
  ports:
  - port: {{ .Values.redis.port }}
    name: peer
  clusterIP: None
  selector:
    app: {{ .Values.redis.labels.app}}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.redis.name }}
spec:
  replicas: {{ .Values.redis.replicas }}
  serviceName: {{ .Values.redis.name }}
  selector:
    matchLabels:
      app: {{ .Values.redis.labels.app }}
  template:
    metadata:
      labels:
        app: {{ .Values.redis.labels.app }}
    spec:
      containers:
      - command: [sh, -c, source /redis-config/init.sh]
        image: '{{.Values.redis.image.repository}}:{{.Values.redis.image.tag }}'
        name: {{ .Values.redis.name }}
        ports:
        - containerPort: {{ .Values.redis.port }}
          name: {{ .Values.redis.name }}
        volumeMounts:
        - mountPath: /redis-config
          name: config
        - mountPath: /redis-data
          name: data
        
      - command: [sh, -c, source /redis-config/sentinel.sh]
        image: '{{.Values.redis.image.repository}}:{{.Values.redis.image.tag }}'
        name: sentinel
        volumeMounts:
        - mountPath: /redis-config
          name: config
      volumes:
      - configMap:
          defaultMode: 420
          name: redis-config
        name: redis-config
      - emptyDir:
        name: data
