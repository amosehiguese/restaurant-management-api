apiVersion: apps/v1
kind: Deployment
metadata:
  name: '{{ .Values.container.name }}-{{ .Values.environment }}'
  namespace: {{ .Values.environment }}
  labels:
    app: {{ .Values.container.name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.container.name }}
      env: {{ .Values.environment }}
  template:
    metadata:
      labels:
        app: {{ .Values.container.name }}
        env: {{ .Values.environment }}
    spec:
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: {{ .Values.container.name }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
            privileged: false
            readOnlyRootFilesystem: true
          image: '{{ .Values.container.image.repository }}:{{ .Values.container.image.tag }}'
          ports:
            - containerPort: {{ .Values.container.port }}
          volumeMounts:
            - name: '{{ .Values.container.name }}-secret-volume'
              mountPath: '/secrets/'
              readOnly: true
          resources:
            requests:
              cpu: {{ .Values.request.cpu }}
              memory: {{ .Values.request.memory }}
            limits:
              cpu: {{ .Values.limit.cpu }}
              memory: {{ .Values.limit.memory }}
          readinessProbe:
            httpGet:
              path: '/_healthz'
              port: {{ .Values.container.port }}
            initialDelaySeconds: 20
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: '/_healthz'
              port: {{ .Values.container.port }}
            initialDelaySeconds: 20
            periodSeconds: 15
      volumes:
        - name: '{{ .Values.container.name }}-secret-volume'
          secret:
            secretName: '{{ .Values.container.name }}-secrets'

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.container.name }}
  namespace: {{ .Values.environment }}
  labels:
    app: {{ .Values.container.name }}
spec:
  type: ClusterIP
  selector:
    app: {{ .Values.container.name }}
  ports:
    - port: 80
      protocol: TCP
      targetPort: {{ .Values.container.port }}
